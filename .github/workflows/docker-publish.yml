name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '20 8 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
  
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v24
        with:
          files: |
            Docker/**/Dockerfile
      - name: List all changed files
        id: list-files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            TAG_NAME=`cut -d / -f 2 <<< $file`
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          done
          REPO_NAME=`echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]'`
          NORMALIZED=`echo ${REPO_NAME//[%&*<>~-=+]/_}`
          echo "NORMALIZED=$NORMALIZED" >> $GITHUB_ENV

      - name: Building & Pushing Docker Image
        run: |
          cd Docker/$TAG_NAME || exit
          docker build . --tag assetsniper/${TAG_NAME}:latest
          docker push assetsniper/${TAG_NAME}:latest
          
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: Docker/$TAG_NAME
          push: ${{ github.event_name != 'pull_request' }}
          tags: $TAG_NAME
          cache-from: type=gha
          cache-to: type=gha,mode=max

